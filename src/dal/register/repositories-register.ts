import { DependencyContainer } from "tsyringe";
import { AccountRepository } from "../account-repository";
import { ModuleRepository } from "../module-repository";
import { PrivilegeRepository } from "../privilage-repository";
import { RoleRepository } from "../role-repository";
import { UserRepository } from "../user-repository";
import { ToDoRepository } from "../todo-repository";
import { GoalRepository } from "../goal-repository";
import { MeasurableRepository } from "../measureable-repository";
import { BusinessPlanRepository } from "../businessPlan-repository";
import { NotificationRepository } from "../notification-repository";
import { RevenueRepository } from "../revenue-repository";
import { CalenderEventRepository } from "../calender-event-repository";
import { CallNoteRepository } from "../callNote-repository";
import { RetentionRepository } from "../retention-repository";
import { LawFirmRepository } from "../law-firm-repository";
import { CustomMeasurableValueRepository } from "../custom-measurable-value-repository";
import { VerificationRepository } from "../verification-repository";
import { IntuitCredsRepository } from "../intuit-creds-repository";
import { StrategicPlanningRepository } from "../strategic-planning-repository";

export const registerRepositories = (container: DependencyContainer) => {
    container.register<AccountRepository>('AccountRepository', AccountRepository);
    container.register<UserRepository>('UserRepository', UserRepository);
    container.register<ModuleRepository>('ModuleRepository', ModuleRepository);
    container.register<PrivilegeRepository>('PrivilegeRepository', PrivilegeRepository);
    container.register<RoleRepository>('RoleRepository', RoleRepository );
    container.register<ToDoRepository>('ToDoRepository', ToDoRepository );
    container.register<GoalRepository>('GoalRepository', GoalRepository );
    container.register<MeasurableRepository>('MeasurableRepository', MeasurableRepository );
    container.register<BusinessPlanRepository>('BusinessPlanRepository', BusinessPlanRepository );
    container.register<NotificationRepository>('NotificationRepository', NotificationRepository);
    container.register<RevenueRepository>('RevenueRepository', RevenueRepository);
    container.register<CalenderEventRepository>('CalenderEventRepository', CalenderEventRepository);
    container.register<CallNoteRepository>('CallNoteRepository', CallNoteRepository);
    container.register<RetentionRepository>('RetentionRepository', RetentionRepository);
    container.register<LawFirmRepository>('LawFirmRepository', LawFirmRepository);
    container.register<CustomMeasurableValueRepository>('CustomMeasurableValueRepository', CustomMeasurableValueRepository);
    container.register<VerificationRepository>('VerificationRepository', VerificationRepository);
    container.register<IntuitCredsRepository>('IntuitCredsRepository', IntuitCredsRepository);
    container.register<StrategicPlanningRepository>('StrategicPlanningRepository', StrategicPlanningRepository);
}